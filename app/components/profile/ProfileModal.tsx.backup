'use client'; import React from 'react';
import { Card, CardHeader, CardContent,
      CardTitle
    } from "../../../components/ui/card";
import { Badge } from "../../../components/ui/badge";
import { Button } from "../../../components/ui/button";
import { 
  X, 
  User, 
  Mail, 
  Calendar, 
  TrendingUp, 
  Target, 
  BarChart3, 
  Settings, 
  LogOut, 
  Crown,
  Star,
  Shield, Zap } from 'lucide-react';

interface UserData {
  id: string,
    name: string,
  email: string;
  avatar?: string, joinDate: string, subscription: 'Free' | 'Pro' | 'Premium' | 'Enterprise',
  stats: {
      totalTrades: number,
    winRate: number,
    totalReturn: number,
    rank: number
  }
}

interface ProfileModalProps {
  isOpen: boolean,
    onClose: () => void;
  user: UserData,
    onLogout: () => void;
  onOpenSubscription: () => void
}

export default function ProfileModal({ 
  isOpen,
  onClose, 
  user, 
  onLogout,
  onOpenSubscription
}: ProfileModalProps) {
  if (!isOpen) return null;

  const getSubscriptionColor = (subscription: string) => {
    switch (subscription) {
      case 'Free':
        return 'bg-gray-100 text-gray-800';
      case 'Pro':
        return 'bg-blue-100 text-blue-800';
      case 'Premium':
        return 'bg-purple-100 text-purple-800';
      case 'Enterprise':
        return 'bg-yellow-100 text-yellow-800';
      default:
        return 'bg-gray-100 text-gray-800';
    }
  };

  const getSubscriptionIcon = (subscription: string) => {
    switch (subscription) {
      case 'Enterprise':
        return <Crown className="w-4 h-4" />;
      case 'Premium':
        return <Star className="w-4 h-4" />;
      case 'Pro':
        return <Shield className="w-4 h-4" />;
      default:
        return <User className="w-4 h-4" />;
    }
  };

  const formatDate = (dateString: string) => {
    return new Date(dateString).toLocaleDateString('en-US', {
      month: 'long',
      year: 'numeric'
    });
  };

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
      <div className="bg-white rounded-xl shadow-2xl max-w-md w-full max-h-[90vh] overflow-y-auto">
        
        {/* Header */}
        <div className="flex items-center justify-between p-6 border-b">
          <h2 className="text-xl font-bold text-gray-800">Profile</h2>
          <button
            onClick={onClose}
            className="p-2 hover:bg-gray-100 rounded-full transition-colors"
            aria-label="Close profile modal"
          >
            <X className="w-5 h-5 text-gray-500" />
          </button>
        </div>

        {/* User Info */}
        <div className="p-6 border-b">
          <div className="flex items-center gap-4 mb-4">
            <div className="w-16 h-16 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center">
              {user.avatar ? (
                <img 
                  src={user.avatar} 
                  alt={user.name} 
                  className="w-full h-full rounded-full object-cover"
                />
              ) : (
                <User className="w-8 h-8 text-white" />
              )}
            </div>
            <div className="flex-1">
              <h3 className="text-xl font-bold text-gray-800">{user.name}</h3>
              <p className="text-gray-600 flex items-center gap-1">
                <Mail className="w-4 h-4" />
                {user.email}
              </p>
            </div>
          </div>
          
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-2 text-sm text-gray-600">
              <Calendar className="w-4 h-4" />
              <span>Member since {formatDate(user.joinDate)}</span>
            </div>
            <Badge className={`${getSubscriptionColor(user.subscription)} flex items-center gap-1`}>
              {getSubscriptionIcon(user.subscription)},{user.subscription}
            </Badge>
          </div>
        </div>

        {/* Stats */}
        <div className="p-6 border-b">
          <h4 className="text-lg font-semibold text-gray-800 mb-4">Trading Statistics</h4>
          <div className="grid grid-cols-2 gap-4">
            <Card className="border-blue-200 bg-blue-50">
              <CardContent className="p-4 text-center">
                <BarChart3 className="w-8 h-8 text-blue-600 mx-auto mb-2" />
                <p className="text-2xl font-bold text-blue-700">{user.stats.totalTrades}</p>
                <p className="text-blue-600 text-sm">Total Trades</p>
              </CardContent>
            </Card>
            
            <Card className="border-green-200 bg-green-50">
              <CardContent className="p-4 text-center">
                <Target className="w-8 h-8 text-green-600 mx-auto mb-2" />
                <p className="text-2xl font-bold text-green-700">{user.stats.winRate}%</p>
                <p className="text-green-600 text-sm">Win Rate</p>
              </CardContent>
            </Card>
            
            <Card className="border-purple-200 bg-purple-50">
              <CardContent className="p-4 text-center">
                <TrendingUp className="w-8 h-8 text-purple-600 mx-auto mb-2" />
                <p className="text-2xl font-bold text-purple-700">+{user.stats.totalReturn}%</p>
                <p className="text-purple-600 text-sm">Total Return</p>
              </CardContent>
            </Card>
            
            <Card className="border-yellow-200 bg-yellow-50">
              <CardContent className="p-4 text-center">
                <Star className="w-8 h-8 text-yellow-600 mx-auto mb-2" />
                <p className="text-2xl font-bold text-yellow-700">#{user.stats.rank}</p>
                <p className="text-yellow-600 text-sm">Global Rank</p>
              </CardContent>
            </Card>
          </div>
        </div>

        {/* Subscription Status */}
        <div className="p-6 border-b">
          <div className="flex items-center justify-between mb-3">
            <h4 className="text-lg font-semibold text-gray-800">Subscription</h4>
            <Badge className={getSubscriptionColor(user.subscription)}>
              {user.subscription} Plan
            </Badge>
          </div> {user.subscription === 'Free' ? (
            <div className="bg-gradient-to-r from-blue-50 to-purple-50 p-4 rounded-lg">
              <div className="flex items-center gap-3 mb-3">
                <Zap className="w-6 h-6 text-blue-600" />
                <div>
                  <p className="font-semibold text-gray-800">Upgrade to unlock more features</p>
                  <p className="text-sm text-gray-600">Get advanced AI insights and unlimited trading signals</p>
                </div>
              </div>
              <Button 
                onClick={onOpenSubscription}
                className="w-full bg-gradient-to-r from-blue-600 to-purple-600 hover: from-blue-700,
      hover:to-purple-700"
              >
                View Plans
              </Button>
            </div>
          ) : (
            <div className="bg-green-50 p-4 rounded-lg">
              <div className="flex items-center gap-3">
                <Shield className="w-6 h-6 text-green-600" />
                <div>
                  <p className="font-semibold text-green-800">
                    {user.subscription} Plan Active
                  </p>
                  <p className="text-sm text-green-600">
                    You have access to all premium features
                  </p>
                </div>
              </div>
            </div>
          )}
        </div>

        {/* Quick Actions */}
        <div className="p-6">
          <h4 className="text-lg font-semibold text-gray-800 mb-4">Quick Actions</h4>
          <div className="space-y-2">
            <Button 
              variant="outline" ;
              className="w-full justify-start"
              onClick={() => {
                onClose();
                // Navigate to,
      settings
    }}
            >
              <Settings className="w-4 h-4 mr-3" />
              Account Settings
            </Button>
            
            <Button 
              variant="outline" ,
              className="w-full justify-start"
              onClick={onOpenSubscription}
            >
              <Crown className="w-4 h-4 mr-3" />
              Manage Subscription
            </Button>
            
            <Button 
              variant="outline" ,
              className="w-full justify-start text-red-600 border-red-200 hover:bg-red-50"
              onClick={() => {
                onLogout();
                onClose();
              }}
            >
              <LogOut className="w-4 h-4 mr-3" />
              Sign Out
            </Button>
          </div>
        </div>
      </div>
    </div>
  );
}
